% Sample code for the following paper:
% ========================================================================
% H.F. Ma, S.Y. Leng, K. Aihara, W. Lin, and L.N. Chen, 
% " Randomly distributed embedding making short-term high-dimensional data predictable",
% Proceedings of the National Academy of Sciences of the United States of America, 
% Vol. 115(43) E9994-E10002, Oct 2018. DOI: 10.1073/pnas.1802987115
% ========================================================================
% A coupled Lorenz model including 36 variables is used as an example in
% this sample code.

clear all;
% Data generation
Y=mylorenz();% coupled lorenz system
noisestrength=0;
X=Y+noisestrength*rand(size(Y));% noise could be added
xx=X(2000+1:end,:)';% after transient dynamics
  
trainlength=30; % length of training data (observed data)
traindata=xx(:,1:trainlength);
  
  
D=size(traindata,1); % number of varialbes in the system. 
 
s=2000;% number of non-delay embedding
L=6;% embedding dimension, which could be determined using FNN or set empirically

predictions=zeros(1,s);
j=1; % the index of target variable
indexr=zeros(s,D);
score=zeros(1,s);
% making predictions with RDE using KDE schema;
for i=1:s
   indexr(i,:)=randperm(D);
   predictions(i)=myprediction_gp(traindata(indexr(i,1:L),1:trainlength-1),traindata(j,2:trainlength),traindata(indexr(i,1:L),trainlength));% other kinds of fitting method could be used here
end
pp=outlieromit(predictions);% exclude the outliers
[F,XI]=ksdensity(pp,linspace(min(pp),max(pp),10000));% use kernal density estimation to approximate the probability distribution
prediction=sum(XI.*F/sum(F)); % use expectation as the final one-step predicted value 
ystd=std(pp);

% plot the result
figure
plot(xx(j,1:trainlength+1),'-*');% real data
hold on;
plot(trainlength+1,prediction,'ro','MarkerSize',8); %predicted data

figure
plot(XI,F); % probablity distribution generated by RDE framework
hold on
plot(xx(j,trainlength+1),max(F),'bo','MarkerFaceColor','r'); % true value of the target variable



% making predictions with RDE using aggregation schema
for i=1:s
   indexr(i,:)=randperm(D);
   score(i)=LOOtest(traindata(indexr(i,1:L),1:trainlength-1),traindata(j,2:trainlength));% leave one out test to get training error, or simply one can use the training residul directly
   i
end
[tempp,in]=sort(score,'ascend');
indexrecord=indexr(in(1:L),:);% r best tuples
s=size(indexrecord);
s=s(1);
for i=1:L
    predictions2(i)=myprediction_gp(traindata(indexrecord(i,1:L),1:trainlength-1),traindata(j,2:trainlength),traindata(indexrecord(i,1:L),trainlength));
    omega(i)=exp(-score(in(i))/score(1));    
end
omega=omega./sum(omega);
prediction2=omega*predictions2';% use the weighted mean as the final prediction  

figure
plot(xx(j,1:trainlength+1),'-*');% real data
hold on;
plot(trainlength+1,prediction2,'ro','MarkerSize',8); %predicted data



